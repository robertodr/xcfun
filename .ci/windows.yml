steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: "Using Python version: $(python.version)"

  - script: |
      python -m pip install --upgrade pip pytest numpy
    displayName: 'Pip install Python dependencies'

  - task: CMake@1
    inputs:
      workingDirectory: 'build'
      cmakeArgs: '-A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=..\Software\xcfun -DXCFUN_PYTHON_INTERFACE=ON ..'

  # Build
  - script: |
      cmake --build build ^
            --config Release ^
            --target install ^
            -- -verbosity:diagnostic 
    displayName: "Build XCFun"

  # Test (ctest)
  - script: |
      ctest --build-config Release ^
            --output-on-failure ^
            --verbose
    displayName: "Test XCFun with CTest"
    workingDirectory: $(Build.BinariesDirectory)/build

  # Test Python module can be imported
  - script: |
      set PYTHONPATH=$(Build.BinariesDirectory)\Software\xcfun\lib;%PYTHONPATH%
      python -c "import xcfun; print(xcfun.xcfun_splash())"
    displayName: "Test XCFun Python module"
    workingDirectory: $(Build.BinariesDirectory)

  # Test we can build the C++ example
  - script: |
      setlocal EnableDelayedExpansion
      cd examples/CXX_host
      mkdir build & cd build
      cmake -G Ninja ^
            -DCMAKE_CXX_COMPILER="cl.exe" ^
            -DMSVC_TOOLSET_VERSION=150 ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DXCFun_DIR=$(Build.BinariesDirectory)\Software\xcfun\share\cmake\XCFun ^
            $(Build.SourcesDirectory)
      cmake --build . ^
            --config Release
      ctest
    displayName: "Build C++ host example"
    workingDirectory: $(Build.BinariesDirectory)

  # Test we can build the C example
  - script: |
      setlocal EnableDelayedExpansion
      cd examples/C_host
      mkdir build & cd build
      cmake -G Ninja ^
            -DCMAKE_C_COMPILER="cl.exe" ^
            -DMSVC_TOOLSET_VERSION=150 ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DXCFun_DIR=$(Build.BinariesDirectory)\Software\xcfun\share\cmake\XCFun ^
            $(Build.SourcesDirectory)
      cmake --build . ^
            --config Release
      ctest
    displayName: "Build C host example"
    workingDirectory: $(Build.BinariesDirectory)
